openapi: 3.0.3
info:
  title: Events Management API
  version: 1.0.0
  description: REST API for events, attendees, organizers with role-based auth (JWT).
paths:
  /api/auth/attendees/:
    post:
      operationId: attendees_create
      tags:
      - attendees
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attendee'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attendee'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attendee'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendee'
          description: ''
  /api/auth/categories/:
    get:
      operationId: categories_list
      tags:
      - categories
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
    post:
      operationId: categories_create
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/auth/categories/{id}/:
    get:
      operationId: categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - categories
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/events/:
    get:
      operationId: events_list
      description: Paginated list of events. Auth required.
      summary: List events
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - Events
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: events_create
      summary: Create event (organizers only)
      tags:
      - Events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
            examples:
              CreateWorkshop:
                value:
                  title: New Developer Workshop
                  description: Hands-on coding workshop
                  location: Tech Hub Building
                  categories:
                  - 1
                  - 3
                  start_date: '2024-12-20T10:00:00Z'
                  end_date: '2024-12-20T16:00:00Z'
                summary: Create Workshop
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
              examples:
                CreateWorkshop:
                  value:
                    title: New Developer Workshop
                    description: Hands-on coding workshop
                    location: Tech Hub Building
                    categories:
                    - 1
                    - 3
                    start_date: '2024-12-20T10:00:00Z'
                    end_date: '2024-12-20T16:00:00Z'
                  summary: Create Workshop
          description: ''
  /api/auth/events/{id}/:
    get:
      operationId: events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - events
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/organizers/:
    post:
      operationId: organizers_create
      tags:
      - organizers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organizer'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Organizer'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Organizer'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizer'
          description: ''
  /api/auth/protected/:
    get:
      operationId: protected_retrieve
      tags:
      - protected
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          description: No response body
  /api/auth/rsvps/:
    get:
      operationId: rsvps_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - rsvps
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRSVPList'
          description: ''
    post:
      operationId: rsvps_create
      tags:
      - rsvps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RSVP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RSVP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RSVP'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RSVP'
          description: ''
  /api/auth/rsvps/{id}/:
    get:
      operationId: rsvps_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rsvp.
        required: true
      tags:
      - rsvps
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RSVP'
          description: ''
    put:
      operationId: rsvps_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rsvp.
        required: true
      tags:
      - rsvps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RSVP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RSVP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RSVP'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RSVP'
          description: ''
    patch:
      operationId: rsvps_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rsvp.
        required: true
      tags:
      - rsvps
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRSVP'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRSVP'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRSVP'
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RSVP'
          description: ''
    delete:
      operationId: rsvps_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rsvp.
        required: true
      tags:
      - rsvps
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      responses:
        '204':
          description: No response body
  /api/auth/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/auth/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
        required: true
      security:
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
  /api/auth/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
        required: true
      security:
      - BearerAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
  /api/auth/users/:
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - api
      security:
      - cookieAuth: []
      - jwtAuth: []
      - BearerAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
components:
  schemas:
    Attendee:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
      required:
      - id
      - user
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        events:
          type: object
          additionalProperties: {}
          readOnly: true
      required:
      - events
      - id
      - name
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        location:
          type: string
          maxLength: 255
        organizer:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - categories
      - created_at
      - description
      - end_date
      - id
      - location
      - organizer
      - start_date
      - title
      - updated_at
    Organizer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        organization_name:
          type: string
          maxLength: 200
      required:
      - id
      - organization_name
      - user
    PaginatedEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedRSVPList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/RSVP'
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 100
        events:
          type: object
          additionalProperties: {}
          readOnly: true
    PatchedEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 200
        description:
          type: string
        location:
          type: string
          maxLength: 255
        organizer:
          type: string
          readOnly: true
        categories:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
    PatchedRSVP:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event:
          type: integer
        event_title:
          type: string
          readOnly: true
        attendee:
          type: integer
          readOnly: true
        attendee_name:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        organizer_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
    RSVP:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        event:
          type: integer
        event_title:
          type: string
          readOnly: true
        attendee:
          type: integer
          readOnly: true
        attendee_name:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          readOnly: true
        organizer_name:
          type: string
          readOnly: true
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - attendee
      - attendee_name
      - created_at
      - event
      - event_title
      - id
      - organizer_name
      - status
    Register:
      type: object
      properties:
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        password:
          type: string
          writeOnly: true
          maxLength: 128
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
      - password
      - username
    StatusEnum:
      enum:
      - going
      - maybe
      - declined
      type: string
      description: |-
        * `going` - going
        * `maybe` - maybe
        * `declined` - declined
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
      required:
      - access
      - password
      - refresh
      - username
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
      - access
      - refresh
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
servers:
- url: http://localhost:8000/api/auth
  description: Local Dev
